
sw.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
   0:	55 c0       	rjmp	.+170    	; 0xac <__ctors_end>
   2:	00 00       	nop
   4:	5b c0       	rjmp	.+182    	; 0xbc <__bad_interrupt>
   6:	00 00       	nop
   8:	59 c0       	rjmp	.+178    	; 0xbc <__bad_interrupt>
   a:	00 00       	nop
   c:	57 c0       	rjmp	.+174    	; 0xbc <__bad_interrupt>
   e:	00 00       	nop
  10:	55 c0       	rjmp	.+170    	; 0xbc <__bad_interrupt>
  12:	00 00       	nop
  14:	53 c0       	rjmp	.+166    	; 0xbc <__bad_interrupt>
  16:	00 00       	nop
  18:	51 c0       	rjmp	.+162    	; 0xbc <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4f c0       	rjmp	.+158    	; 0xbc <__bad_interrupt>
  1e:	00 00       	nop
  20:	4d c0       	rjmp	.+154    	; 0xbc <__bad_interrupt>
  22:	00 00       	nop
  24:	4b c0       	rjmp	.+150    	; 0xbc <__bad_interrupt>
  26:	00 00       	nop
  28:	49 c0       	rjmp	.+146    	; 0xbc <__bad_interrupt>
  2a:	00 00       	nop
  2c:	47 c0       	rjmp	.+142    	; 0xbc <__bad_interrupt>
  2e:	00 00       	nop
  30:	45 c0       	rjmp	.+138    	; 0xbc <__bad_interrupt>
  32:	00 00       	nop
  34:	43 c0       	rjmp	.+134    	; 0xbc <__bad_interrupt>
  36:	00 00       	nop
  38:	41 c0       	rjmp	.+130    	; 0xbc <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3f c0       	rjmp	.+126    	; 0xbc <__bad_interrupt>
  3e:	00 00       	nop
  40:	3d c0       	rjmp	.+122    	; 0xbc <__bad_interrupt>
  42:	00 00       	nop
  44:	3b c0       	rjmp	.+118    	; 0xbc <__bad_interrupt>
  46:	00 00       	nop
  48:	39 c0       	rjmp	.+114    	; 0xbc <__bad_interrupt>
  4a:	00 00       	nop
  4c:	37 c0       	rjmp	.+110    	; 0xbc <__bad_interrupt>
  4e:	00 00       	nop
  50:	35 c0       	rjmp	.+106    	; 0xbc <__bad_interrupt>
  52:	00 00       	nop
  54:	33 c0       	rjmp	.+102    	; 0xbc <__bad_interrupt>
  56:	00 00       	nop
  58:	31 c0       	rjmp	.+98     	; 0xbc <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2f c0       	rjmp	.+94     	; 0xbc <__bad_interrupt>
  5e:	00 00       	nop
  60:	2d c0       	rjmp	.+90     	; 0xbc <__bad_interrupt>
  62:	00 00       	nop
  64:	2b c0       	rjmp	.+86     	; 0xbc <__bad_interrupt>
  66:	00 00       	nop
  68:	29 c0       	rjmp	.+82     	; 0xbc <__bad_interrupt>
  6a:	00 00       	nop
  6c:	27 c0       	rjmp	.+78     	; 0xbc <__bad_interrupt>
  6e:	00 00       	nop
  70:	25 c0       	rjmp	.+74     	; 0xbc <__bad_interrupt>
  72:	00 00       	nop
  74:	23 c0       	rjmp	.+70     	; 0xbc <__bad_interrupt>
  76:	00 00       	nop
  78:	21 c0       	rjmp	.+66     	; 0xbc <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1f c0       	rjmp	.+62     	; 0xbc <__bad_interrupt>
  7e:	00 00       	nop
  80:	1d c0       	rjmp	.+58     	; 0xbc <__bad_interrupt>
  82:	00 00       	nop
  84:	1b c0       	rjmp	.+54     	; 0xbc <__bad_interrupt>
  86:	00 00       	nop
  88:	19 c0       	rjmp	.+50     	; 0xbc <__bad_interrupt>
  8a:	00 00       	nop
  8c:	17 c0       	rjmp	.+46     	; 0xbc <__bad_interrupt>
  8e:	00 00       	nop
  90:	15 c0       	rjmp	.+42     	; 0xbc <__bad_interrupt>
  92:	00 00       	nop
  94:	13 c0       	rjmp	.+38     	; 0xbc <__bad_interrupt>
  96:	00 00       	nop
  98:	11 c0       	rjmp	.+34     	; 0xbc <__bad_interrupt>
  9a:	00 00       	nop
  9c:	0f c0       	rjmp	.+30     	; 0xbc <__bad_interrupt>
  9e:	00 00       	nop
  a0:	0d c0       	rjmp	.+26     	; 0xbc <__bad_interrupt>
  a2:	00 00       	nop
  a4:	0b c0       	rjmp	.+22     	; 0xbc <__bad_interrupt>
  a6:	00 00       	nop
  a8:	09 c0       	rjmp	.+18     	; 0xbc <__bad_interrupt>
	...

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	02 d0       	rcall	.+4      	; 0xbe <main>
  ba:	42 c0       	rjmp	.+132    	; 0x140 <_exit>

000000bc <__bad_interrupt>:
  bc:	a1 cf       	rjmp	.-190    	; 0x0 <__vectors>

000000be <main>:
#define DDR_LED 	DDRB
#define PORT_LED	PORTB

int main(void)
{
    DDR_SW |= (0<<PIN0)|(0<<PIN1)|(0<<PIN2)|(0<<PIN3);
  be:	8a b1       	in	r24, 0x0a	; 10
  c0:	8a b9       	out	0x0a, r24	; 10
		//DDRD = 0x00;
    DDR_LED |= (1<<PORT4)|(1<<PORT5)|(1<<PORT6)|(1<<PORT7);
  c2:	84 b1       	in	r24, 0x04	; 4
  c4:	80 6f       	ori	r24, 0xF0	; 240
  c6:	84 b9       	out	0x04, r24	; 4

		PORT_LED = 0xFF;
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	85 b9       	out	0x05, r24	; 5

		for (;;)
    {
			if (!(PIN_SW & 0x01))
			{
				PORT_LED = 0xEF;
  cc:	3f ee       	ldi	r19, 0xEF	; 239
				_delay_ms(200);
				PORT_LED = 0xFF;
			}
			if (!(PIN_SW & 0x02))
			{
				PORT_LED = 0xDF;
  ce:	4f ed       	ldi	r20, 0xDF	; 223
				_delay_ms(200);
				PORT_LED = 0xFF;
			}
			if (!(PIN_SW & 0x04))
			{
				PORT_LED = 0xBF;
  d0:	5f eb       	ldi	r21, 0xBF	; 191
    {
			if (!(PIN_SW & 0x01))
			{
				PORT_LED = 0xEF;
				_delay_ms(200);
				PORT_LED = 0xFF;
  d2:	9f ef       	ldi	r25, 0xFF	; 255
				_delay_ms(200);
				PORT_LED = 0xFF;
			}
			if (!(PIN_SW & 0x08))
			{
				PORT_LED = 0x7F;
  d4:	2f e7       	ldi	r18, 0x7F	; 127

		PORT_LED = 0xFF;

		for (;;)
    {
			if (!(PIN_SW & 0x01))
  d6:	48 99       	sbic	0x09, 0	; 9
  d8:	0b c0       	rjmp	.+22     	; 0xf0 <main+0x32>
			{
				PORT_LED = 0xEF;
  da:	35 b9       	out	0x05, r19	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  dc:	6f ef       	ldi	r22, 0xFF	; 255
  de:	73 ec       	ldi	r23, 0xC3	; 195
  e0:	e9 e0       	ldi	r30, 0x09	; 9
  e2:	61 50       	subi	r22, 0x01	; 1
  e4:	70 40       	sbci	r23, 0x00	; 0
  e6:	e0 40       	sbci	r30, 0x00	; 0
  e8:	e1 f7       	brne	.-8      	; 0xe2 <main+0x24>
  ea:	00 c0       	rjmp	.+0      	; 0xec <main+0x2e>
  ec:	00 00       	nop
				_delay_ms(200);
				PORT_LED = 0xFF;
  ee:	85 b9       	out	0x05, r24	; 5
			}
			if (!(PIN_SW & 0x02))
  f0:	49 99       	sbic	0x09, 1	; 9
  f2:	0b c0       	rjmp	.+22     	; 0x10a <main+0x4c>
			{
				PORT_LED = 0xDF;
  f4:	45 b9       	out	0x05, r20	; 5
  f6:	6f ef       	ldi	r22, 0xFF	; 255
  f8:	73 ec       	ldi	r23, 0xC3	; 195
  fa:	e9 e0       	ldi	r30, 0x09	; 9
  fc:	61 50       	subi	r22, 0x01	; 1
  fe:	70 40       	sbci	r23, 0x00	; 0
 100:	e0 40       	sbci	r30, 0x00	; 0
 102:	e1 f7       	brne	.-8      	; 0xfc <main+0x3e>
 104:	00 c0       	rjmp	.+0      	; 0x106 <main+0x48>
 106:	00 00       	nop
				_delay_ms(200);
				PORT_LED = 0xFF;
 108:	85 b9       	out	0x05, r24	; 5
			}
			if (!(PIN_SW & 0x04))
 10a:	4a 99       	sbic	0x09, 2	; 9
 10c:	0b c0       	rjmp	.+22     	; 0x124 <main+0x66>
			{
				PORT_LED = 0xBF;
 10e:	55 b9       	out	0x05, r21	; 5
 110:	6f ef       	ldi	r22, 0xFF	; 255
 112:	73 ec       	ldi	r23, 0xC3	; 195
 114:	e9 e0       	ldi	r30, 0x09	; 9
 116:	61 50       	subi	r22, 0x01	; 1
 118:	70 40       	sbci	r23, 0x00	; 0
 11a:	e0 40       	sbci	r30, 0x00	; 0
 11c:	e1 f7       	brne	.-8      	; 0x116 <main+0x58>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <main+0x62>
 120:	00 00       	nop
				_delay_ms(200);
				PORT_LED = 0xFF;
 122:	85 b9       	out	0x05, r24	; 5
			}
			if (!(PIN_SW & 0x08))
 124:	4b 99       	sbic	0x09, 3	; 9
 126:	d7 cf       	rjmp	.-82     	; 0xd6 <main+0x18>
			{
				PORT_LED = 0x7F;
 128:	25 b9       	out	0x05, r18	; 5
 12a:	6f ef       	ldi	r22, 0xFF	; 255
 12c:	73 ec       	ldi	r23, 0xC3	; 195
 12e:	e9 e0       	ldi	r30, 0x09	; 9
 130:	61 50       	subi	r22, 0x01	; 1
 132:	70 40       	sbci	r23, 0x00	; 0
 134:	e0 40       	sbci	r30, 0x00	; 0
 136:	e1 f7       	brne	.-8      	; 0x130 <main+0x72>
 138:	00 c0       	rjmp	.+0      	; 0x13a <main+0x7c>
 13a:	00 00       	nop
				_delay_ms(200);
				PORT_LED = 0xFF;
 13c:	95 b9       	out	0x05, r25	; 5
 13e:	cb cf       	rjmp	.-106    	; 0xd6 <main+0x18>

00000140 <_exit>:
 140:	f8 94       	cli

00000142 <__stop_program>:
 142:	ff cf       	rjmp	.-2      	; 0x142 <__stop_program>
