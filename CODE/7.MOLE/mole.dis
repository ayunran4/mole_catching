
mole.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
   0:	55 c0       	rjmp	.+170    	; 0xac <__ctors_end>
   2:	00 00       	nop
   4:	66 c0       	rjmp	.+204    	; 0xd2 <__bad_interrupt>
   6:	00 00       	nop
   8:	64 c0       	rjmp	.+200    	; 0xd2 <__bad_interrupt>
   a:	00 00       	nop
   c:	62 c0       	rjmp	.+196    	; 0xd2 <__bad_interrupt>
   e:	00 00       	nop
  10:	60 c0       	rjmp	.+192    	; 0xd2 <__bad_interrupt>
  12:	00 00       	nop
  14:	5e c0       	rjmp	.+188    	; 0xd2 <__bad_interrupt>
  16:	00 00       	nop
  18:	5c c0       	rjmp	.+184    	; 0xd2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5a c0       	rjmp	.+180    	; 0xd2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	3e c0       	rjmp	.+124    	; 0xd2 <__bad_interrupt>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	2e c0       	rjmp	.+92     	; 0xd2 <__bad_interrupt>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	28 c0       	rjmp	.+80     	; 0xd2 <__bad_interrupt>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
  96:	00 00       	nop
  98:	1c c0       	rjmp	.+56     	; 0xd2 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	1a c0       	rjmp	.+52     	; 0xd2 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	18 c0       	rjmp	.+48     	; 0xd2 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	16 c0       	rjmp	.+44     	; 0xd2 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	14 c0       	rjmp	.+40     	; 0xd2 <__bad_interrupt>
	...

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
  b8:	11 e0       	ldi	r17, 0x01	; 1
  ba:	a0 e0       	ldi	r26, 0x00	; 0
  bc:	b1 e0       	ldi	r27, 0x01	; 1
  be:	ee e7       	ldi	r30, 0x7E	; 126
  c0:	f3 e0       	ldi	r31, 0x03	; 3
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <__do_copy_data+0x10>
  c4:	05 90       	lpm	r0, Z+
  c6:	0d 92       	st	X+, r0
  c8:	ae 30       	cpi	r26, 0x0E	; 14
  ca:	b1 07       	cpc	r27, r17
  cc:	d9 f7       	brne	.-10     	; 0xc4 <__do_copy_data+0xc>
  ce:	16 d0       	rcall	.+44     	; 0xfc <main>
  d0:	54 c1       	rjmp	.+680    	; 0x37a <_exit>

000000d2 <__bad_interrupt>:
  d2:	96 cf       	rjmp	.-212    	; 0x0 <__vectors>

000000d4 <init_adc>:

// ADC Init
void init_adc(void)
{
    // AVCC with external capacitor on AREF pin
    ADMUX |= (0<<REFS1)|(1<<REFS0);
  d4:	ec e7       	ldi	r30, 0x7C	; 124
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	80 64       	ori	r24, 0x40	; 64
  dc:	80 83       	st	Z, r24
    // PF1 - CDS
    ADMUX |= (0<<MUX4)|(0<<MUX3)|(0<<MUX2)|(0<<MUX1)|(1<<MUX0);
  de:	80 81       	ld	r24, Z
  e0:	81 60       	ori	r24, 0x01	; 1
  e2:	80 83       	st	Z, r24
    // Enable ADC, Division factor = 128 (= 125kHz) : 50kHz < 125kHz < 200kHz
    ADCSRA |= (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
  e4:	ea e7       	ldi	r30, 0x7A	; 122
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	87 68       	ori	r24, 0x87	; 135
  ec:	80 83       	st	Z, r24
  ee:	08 95       	ret

000000f0 <get_random_num>:

// Get Random Number
unsigned char get_random_num()
{
  // Return 4,5,6,7
  return rand()%4+4;
  f0:	d9 d0       	rcall	.+434    	; 0x2a4 <rand>
  f2:	64 e0       	ldi	r22, 0x04	; 4
  f4:	70 e0       	ldi	r23, 0x00	; 0
  f6:	4c d0       	rcall	.+152    	; 0x190 <__divmodhi4>
  f8:	8c 5f       	subi	r24, 0xFC	; 252
  fa:	08 95       	ret

000000fc <main>:
}

int main(void)
{
  fc:	aa e0       	ldi	r26, 0x0A	; 10
  fe:	b0 e0       	ldi	r27, 0x00	; 0
 100:	e3 e8       	ldi	r30, 0x83	; 131
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	66 c0       	rjmp	.+204    	; 0x1d2 <__prologue_saves__+0x1c>
 106:	8a e0       	ldi	r24, 0x0A	; 10
  unsigned char random, LED_on;
  unsigned char fnd_num[10] = {0x0F,0x1F,0x2F,0x3F,0x4F,0x5F,0x6F,0x7F,0x8F,0x9F};
 108:	e4 e0       	ldi	r30, 0x04	; 4
 10a:	f1 e0       	ldi	r31, 0x01	; 1
 10c:	de 01       	movw	r26, r28
 10e:	11 96       	adiw	r26, 0x01	; 1
 110:	01 90       	ld	r0, Z+
 112:	0d 92       	st	X+, r0
 114:	8a 95       	dec	r24
 116:	e1 f7       	brne	.-8      	; 0x110 <main+0x14>
 118:	8a b1       	in	r24, 0x0a	; 10

  DDR_SW |= (0<<PIN0)|(0<<PIN1)|(0<<PIN2)|(0<<PIN3);
 11a:	8a b9       	out	0x0a, r24	; 10
 11c:	80 b3       	in	r24, 0x10	; 16
  DDR_FND |= (1<<PORT4)|(1<<PORT5)|(1<<PORT6)|(1<<PORT7);
 11e:	80 6f       	ori	r24, 0xF0	; 240
 120:	80 bb       	out	0x10, r24	; 16
 122:	84 b1       	in	r24, 0x04	; 4
  DDR_LED |= (1<<PORT4)|(1<<PORT5)|(1<<PORT6)|(1<<PORT7);
 124:	80 6f       	ori	r24, 0xF0	; 240
 126:	84 b9       	out	0x04, r24	; 4
 128:	d5 df       	rcall	.-86     	; 0xd4 <init_adc>

  init_adc();
 12a:	8f ef       	ldi	r24, 0xFF	; 255
 12c:	85 b9       	out	0x05, r24	; 5

  PORT_LED = 0xFF;
 12e:	0f ef       	ldi	r16, 0xFF	; 255
 130:	df df       	rcall	.-66     	; 0xf0 <get_random_num>
      case LED3 : LED_on = 0x80; break;
    }
    PORT_LED = ~LED_on;
    _delay_ms(400);

    PORT_LED = 0xFF;
 132:	e1 e0       	ldi	r30, 0x01	; 1

  PORT_LED = 0xFF;

	for (;;)
  {
    random = get_random_num();
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	ec 0f       	add	r30, r28
    PORT_FND = fnd_num[random];
 138:	fd 1f       	adc	r31, r29
 13a:	e8 0f       	add	r30, r24
 13c:	f1 1d       	adc	r31, r1
 13e:	90 81       	ld	r25, Z
 140:	91 bb       	out	0x11, r25	; 17
 142:	85 30       	cpi	r24, 0x05	; 5
 144:	59 f0       	breq	.+22     	; 0x15c <main+0x60>
 146:	20 f4       	brcc	.+8      	; 0x150 <main+0x54>
    switch (random)
 148:	84 30       	cpi	r24, 0x04	; 4
 14a:	59 f4       	brne	.+22     	; 0x162 <main+0x66>
 14c:	10 e1       	ldi	r17, 0x10	; 16
 14e:	09 c0       	rjmp	.+18     	; 0x162 <main+0x66>
 150:	86 30       	cpi	r24, 0x06	; 6
    {
      case LED0 : LED_on = 0x10; break;
 152:	31 f0       	breq	.+12     	; 0x160 <main+0x64>
 154:	87 30       	cpi	r24, 0x07	; 7

	for (;;)
  {
    random = get_random_num();
    PORT_FND = fnd_num[random];
    switch (random)
 156:	29 f4       	brne	.+10     	; 0x162 <main+0x66>
 158:	10 e8       	ldi	r17, 0x80	; 128
 15a:	03 c0       	rjmp	.+6      	; 0x162 <main+0x66>
 15c:	10 e2       	ldi	r17, 0x20	; 32
    {
      case LED0 : LED_on = 0x10; break;
      case LED1 : LED_on = 0x20; break;
      case LED2 : LED_on = 0x40; break;
      case LED3 : LED_on = 0x80; break;
 15e:	01 c0       	rjmp	.+2      	; 0x162 <main+0x66>
 160:	10 e4       	ldi	r17, 0x40	; 64
    random = get_random_num();
    PORT_FND = fnd_num[random];
    switch (random)
    {
      case LED0 : LED_on = 0x10; break;
      case LED1 : LED_on = 0x20; break;
 162:	81 2f       	mov	r24, r17
 164:	80 95       	com	r24
      case LED2 : LED_on = 0x40; break;
 166:	85 b9       	out	0x05, r24	; 5
 168:	2f ef       	ldi	r18, 0xFF	; 255
 16a:	87 e8       	ldi	r24, 0x87	; 135
 16c:	93 e1       	ldi	r25, 0x13	; 19
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 16e:	21 50       	subi	r18, 0x01	; 1
 170:	80 40       	sbci	r24, 0x00	; 0
 172:	90 40       	sbci	r25, 0x00	; 0
 174:	e1 f7       	brne	.-8      	; 0x16e <main+0x72>
 176:	00 c0       	rjmp	.+0      	; 0x178 <main+0x7c>
 178:	00 00       	nop
 17a:	05 b9       	out	0x05, r16	; 5
 17c:	2f ef       	ldi	r18, 0xFF	; 255
 17e:	83 ec       	ldi	r24, 0xC3	; 195
 180:	99 e0       	ldi	r25, 0x09	; 9
 182:	21 50       	subi	r18, 0x01	; 1
 184:	80 40       	sbci	r24, 0x00	; 0
 186:	90 40       	sbci	r25, 0x00	; 0
 188:	e1 f7       	brne	.-8      	; 0x182 <main+0x86>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <main+0x90>
 18c:	00 00       	nop
 18e:	d0 cf       	rjmp	.-96     	; 0x130 <main+0x34>

00000190 <__divmodhi4>:
 190:	97 fb       	bst	r25, 7
 192:	07 2e       	mov	r0, r23
 194:	16 f4       	brtc	.+4      	; 0x19a <__divmodhi4+0xa>
 196:	00 94       	com	r0
 198:	06 d0       	rcall	.+12     	; 0x1a6 <__divmodhi4_neg1>
 19a:	77 fd       	sbrc	r23, 7
 19c:	08 d0       	rcall	.+16     	; 0x1ae <__divmodhi4_neg2>
 19e:	27 d0       	rcall	.+78     	; 0x1ee <__udivmodhi4>
 1a0:	07 fc       	sbrc	r0, 7
 1a2:	05 d0       	rcall	.+10     	; 0x1ae <__divmodhi4_neg2>
 1a4:	3e f4       	brtc	.+14     	; 0x1b4 <__divmodhi4_exit>

000001a6 <__divmodhi4_neg1>:
 1a6:	90 95       	com	r25
 1a8:	81 95       	neg	r24
 1aa:	9f 4f       	sbci	r25, 0xFF	; 255
 1ac:	08 95       	ret

000001ae <__divmodhi4_neg2>:
 1ae:	70 95       	com	r23
 1b0:	61 95       	neg	r22
 1b2:	7f 4f       	sbci	r23, 0xFF	; 255

000001b4 <__divmodhi4_exit>:
 1b4:	08 95       	ret

000001b6 <__prologue_saves__>:
 1b6:	2f 92       	push	r2
 1b8:	3f 92       	push	r3
 1ba:	4f 92       	push	r4
 1bc:	5f 92       	push	r5
 1be:	6f 92       	push	r6
 1c0:	7f 92       	push	r7
 1c2:	8f 92       	push	r8
 1c4:	9f 92       	push	r9
 1c6:	af 92       	push	r10
 1c8:	bf 92       	push	r11
 1ca:	cf 92       	push	r12
 1cc:	df 92       	push	r13
 1ce:	ef 92       	push	r14
 1d0:	ff 92       	push	r15
 1d2:	0f 93       	push	r16
 1d4:	1f 93       	push	r17
 1d6:	cf 93       	push	r28
 1d8:	df 93       	push	r29
 1da:	cd b7       	in	r28, 0x3d	; 61
 1dc:	de b7       	in	r29, 0x3e	; 62
 1de:	ca 1b       	sub	r28, r26
 1e0:	db 0b       	sbc	r29, r27
 1e2:	0f b6       	in	r0, 0x3f	; 63
 1e4:	f8 94       	cli
 1e6:	de bf       	out	0x3e, r29	; 62
 1e8:	0f be       	out	0x3f, r0	; 63
 1ea:	cd bf       	out	0x3d, r28	; 61
 1ec:	09 94       	ijmp

000001ee <__udivmodhi4>:
 1ee:	aa 1b       	sub	r26, r26
 1f0:	bb 1b       	sub	r27, r27
 1f2:	51 e1       	ldi	r21, 0x11	; 17
 1f4:	07 c0       	rjmp	.+14     	; 0x204 <__udivmodhi4_ep>

000001f6 <__udivmodhi4_loop>:
 1f6:	aa 1f       	adc	r26, r26
 1f8:	bb 1f       	adc	r27, r27
 1fa:	a6 17       	cp	r26, r22
 1fc:	b7 07       	cpc	r27, r23
 1fe:	10 f0       	brcs	.+4      	; 0x204 <__udivmodhi4_ep>
 200:	a6 1b       	sub	r26, r22
 202:	b7 0b       	sbc	r27, r23

00000204 <__udivmodhi4_ep>:
 204:	88 1f       	adc	r24, r24
 206:	99 1f       	adc	r25, r25
 208:	5a 95       	dec	r21
 20a:	a9 f7       	brne	.-22     	; 0x1f6 <__udivmodhi4_loop>
 20c:	80 95       	com	r24
 20e:	90 95       	com	r25
 210:	bc 01       	movw	r22, r24
 212:	cd 01       	movw	r24, r26
 214:	08 95       	ret

00000216 <do_rand>:
 216:	8f 92       	push	r8
 218:	9f 92       	push	r9
 21a:	af 92       	push	r10
 21c:	bf 92       	push	r11
 21e:	cf 92       	push	r12
 220:	df 92       	push	r13
 222:	ef 92       	push	r14
 224:	ff 92       	push	r15
 226:	cf 93       	push	r28
 228:	df 93       	push	r29
 22a:	ec 01       	movw	r28, r24
 22c:	68 81       	ld	r22, Y
 22e:	79 81       	ldd	r23, Y+1	; 0x01
 230:	8a 81       	ldd	r24, Y+2	; 0x02
 232:	9b 81       	ldd	r25, Y+3	; 0x03
 234:	61 15       	cp	r22, r1
 236:	71 05       	cpc	r23, r1
 238:	81 05       	cpc	r24, r1
 23a:	91 05       	cpc	r25, r1
 23c:	21 f4       	brne	.+8      	; 0x246 <do_rand+0x30>
 23e:	64 e2       	ldi	r22, 0x24	; 36
 240:	79 ed       	ldi	r23, 0xD9	; 217
 242:	8b e5       	ldi	r24, 0x5B	; 91
 244:	97 e0       	ldi	r25, 0x07	; 7
 246:	2d e1       	ldi	r18, 0x1D	; 29
 248:	33 ef       	ldi	r19, 0xF3	; 243
 24a:	41 e0       	ldi	r20, 0x01	; 1
 24c:	50 e0       	ldi	r21, 0x00	; 0
 24e:	38 d0       	rcall	.+112    	; 0x2c0 <__divmodsi4>
 250:	49 01       	movw	r8, r18
 252:	5a 01       	movw	r10, r20
 254:	9b 01       	movw	r18, r22
 256:	ac 01       	movw	r20, r24
 258:	a7 ea       	ldi	r26, 0xA7	; 167
 25a:	b1 e4       	ldi	r27, 0x41	; 65
 25c:	4d d0       	rcall	.+154    	; 0x2f8 <__muluhisi3>
 25e:	6b 01       	movw	r12, r22
 260:	7c 01       	movw	r14, r24
 262:	ac ee       	ldi	r26, 0xEC	; 236
 264:	b4 ef       	ldi	r27, 0xF4	; 244
 266:	a5 01       	movw	r20, r10
 268:	94 01       	movw	r18, r8
 26a:	52 d0       	rcall	.+164    	; 0x310 <__mulohisi3>
 26c:	dc 01       	movw	r26, r24
 26e:	cb 01       	movw	r24, r22
 270:	8c 0d       	add	r24, r12
 272:	9d 1d       	adc	r25, r13
 274:	ae 1d       	adc	r26, r14
 276:	bf 1d       	adc	r27, r15
 278:	b7 ff       	sbrs	r27, 7
 27a:	03 c0       	rjmp	.+6      	; 0x282 <do_rand+0x6c>
 27c:	01 97       	sbiw	r24, 0x01	; 1
 27e:	a1 09       	sbc	r26, r1
 280:	b0 48       	sbci	r27, 0x80	; 128
 282:	88 83       	st	Y, r24
 284:	99 83       	std	Y+1, r25	; 0x01
 286:	aa 83       	std	Y+2, r26	; 0x02
 288:	bb 83       	std	Y+3, r27	; 0x03
 28a:	9f 77       	andi	r25, 0x7F	; 127
 28c:	df 91       	pop	r29
 28e:	cf 91       	pop	r28
 290:	ff 90       	pop	r15
 292:	ef 90       	pop	r14
 294:	df 90       	pop	r13
 296:	cf 90       	pop	r12
 298:	bf 90       	pop	r11
 29a:	af 90       	pop	r10
 29c:	9f 90       	pop	r9
 29e:	8f 90       	pop	r8
 2a0:	08 95       	ret

000002a2 <rand_r>:
 2a2:	b9 cf       	rjmp	.-142    	; 0x216 <do_rand>

000002a4 <rand>:
 2a4:	80 e0       	ldi	r24, 0x00	; 0
 2a6:	91 e0       	ldi	r25, 0x01	; 1
 2a8:	b6 cf       	rjmp	.-148    	; 0x216 <do_rand>

000002aa <srand>:
 2aa:	a0 e0       	ldi	r26, 0x00	; 0
 2ac:	b0 e0       	ldi	r27, 0x00	; 0
 2ae:	80 93 00 01 	sts	0x0100, r24
 2b2:	90 93 01 01 	sts	0x0101, r25
 2b6:	a0 93 02 01 	sts	0x0102, r26
 2ba:	b0 93 03 01 	sts	0x0103, r27
 2be:	08 95       	ret

000002c0 <__divmodsi4>:
 2c0:	05 2e       	mov	r0, r21
 2c2:	97 fb       	bst	r25, 7
 2c4:	16 f4       	brtc	.+4      	; 0x2ca <__divmodsi4+0xa>
 2c6:	00 94       	com	r0
 2c8:	0f d0       	rcall	.+30     	; 0x2e8 <__negsi2>
 2ca:	57 fd       	sbrc	r21, 7
 2cc:	05 d0       	rcall	.+10     	; 0x2d8 <__divmodsi4_neg2>
 2ce:	24 d0       	rcall	.+72     	; 0x318 <__udivmodsi4>
 2d0:	07 fc       	sbrc	r0, 7
 2d2:	02 d0       	rcall	.+4      	; 0x2d8 <__divmodsi4_neg2>
 2d4:	46 f4       	brtc	.+16     	; 0x2e6 <__divmodsi4_exit>
 2d6:	08 c0       	rjmp	.+16     	; 0x2e8 <__negsi2>

000002d8 <__divmodsi4_neg2>:
 2d8:	50 95       	com	r21
 2da:	40 95       	com	r20
 2dc:	30 95       	com	r19
 2de:	21 95       	neg	r18
 2e0:	3f 4f       	sbci	r19, 0xFF	; 255
 2e2:	4f 4f       	sbci	r20, 0xFF	; 255
 2e4:	5f 4f       	sbci	r21, 0xFF	; 255

000002e6 <__divmodsi4_exit>:
 2e6:	08 95       	ret

000002e8 <__negsi2>:
 2e8:	90 95       	com	r25
 2ea:	80 95       	com	r24
 2ec:	70 95       	com	r23
 2ee:	61 95       	neg	r22
 2f0:	7f 4f       	sbci	r23, 0xFF	; 255
 2f2:	8f 4f       	sbci	r24, 0xFF	; 255
 2f4:	9f 4f       	sbci	r25, 0xFF	; 255
 2f6:	08 95       	ret

000002f8 <__muluhisi3>:
 2f8:	31 d0       	rcall	.+98     	; 0x35c <__umulhisi3>
 2fa:	a5 9f       	mul	r26, r21
 2fc:	90 0d       	add	r25, r0
 2fe:	b4 9f       	mul	r27, r20
 300:	90 0d       	add	r25, r0
 302:	a4 9f       	mul	r26, r20
 304:	80 0d       	add	r24, r0
 306:	91 1d       	adc	r25, r1
 308:	11 24       	eor	r1, r1
 30a:	08 95       	ret

0000030c <__mulshisi3>:
 30c:	b7 ff       	sbrs	r27, 7
 30e:	f4 cf       	rjmp	.-24     	; 0x2f8 <__muluhisi3>

00000310 <__mulohisi3>:
 310:	f3 df       	rcall	.-26     	; 0x2f8 <__muluhisi3>
 312:	82 1b       	sub	r24, r18
 314:	93 0b       	sbc	r25, r19
 316:	08 95       	ret

00000318 <__udivmodsi4>:
 318:	a1 e2       	ldi	r26, 0x21	; 33
 31a:	1a 2e       	mov	r1, r26
 31c:	aa 1b       	sub	r26, r26
 31e:	bb 1b       	sub	r27, r27
 320:	fd 01       	movw	r30, r26
 322:	0d c0       	rjmp	.+26     	; 0x33e <__udivmodsi4_ep>

00000324 <__udivmodsi4_loop>:
 324:	aa 1f       	adc	r26, r26
 326:	bb 1f       	adc	r27, r27
 328:	ee 1f       	adc	r30, r30
 32a:	ff 1f       	adc	r31, r31
 32c:	a2 17       	cp	r26, r18
 32e:	b3 07       	cpc	r27, r19
 330:	e4 07       	cpc	r30, r20
 332:	f5 07       	cpc	r31, r21
 334:	20 f0       	brcs	.+8      	; 0x33e <__udivmodsi4_ep>
 336:	a2 1b       	sub	r26, r18
 338:	b3 0b       	sbc	r27, r19
 33a:	e4 0b       	sbc	r30, r20
 33c:	f5 0b       	sbc	r31, r21

0000033e <__udivmodsi4_ep>:
 33e:	66 1f       	adc	r22, r22
 340:	77 1f       	adc	r23, r23
 342:	88 1f       	adc	r24, r24
 344:	99 1f       	adc	r25, r25
 346:	1a 94       	dec	r1
 348:	69 f7       	brne	.-38     	; 0x324 <__udivmodsi4_loop>
 34a:	60 95       	com	r22
 34c:	70 95       	com	r23
 34e:	80 95       	com	r24
 350:	90 95       	com	r25
 352:	9b 01       	movw	r18, r22
 354:	ac 01       	movw	r20, r24
 356:	bd 01       	movw	r22, r26
 358:	cf 01       	movw	r24, r30
 35a:	08 95       	ret

0000035c <__umulhisi3>:
 35c:	a2 9f       	mul	r26, r18
 35e:	b0 01       	movw	r22, r0
 360:	b3 9f       	mul	r27, r19
 362:	c0 01       	movw	r24, r0
 364:	a3 9f       	mul	r26, r19
 366:	70 0d       	add	r23, r0
 368:	81 1d       	adc	r24, r1
 36a:	11 24       	eor	r1, r1
 36c:	91 1d       	adc	r25, r1
 36e:	b2 9f       	mul	r27, r18
 370:	70 0d       	add	r23, r0
 372:	81 1d       	adc	r24, r1
 374:	11 24       	eor	r1, r1
 376:	91 1d       	adc	r25, r1
 378:	08 95       	ret

0000037a <_exit>:
 37a:	f8 94       	cli

0000037c <__stop_program>:
 37c:	ff cf       	rjmp	.-2      	; 0x37c <__stop_program>
